# Copyright 2025 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

from datetime import datetime
from typing import Union

from pydantic import Field
from pydantic.networks import IPvAnyAddress

from maascommon.enums.ipaddress import IpAddressType
from maasservicelayer.models.base import ResourceBuilder, UNSET, Unset


class StaticIPAddressBuilder(ResourceBuilder):
    """Autogenerated from utilities/generate_builders.py.

    You can still add your custom methods here, they won't be overwritten by
    the generated code.
    """

    alloc_type: Union[IpAddressType, Unset] = Field(
        default=UNSET, required=False
    )
    created: Union[datetime, Unset] = Field(default=UNSET, required=False)
    id: Union[int, Unset] = Field(default=UNSET, required=False)
    ip: Union[IPvAnyAddress, None, Unset] = Field(
        default=UNSET, required=False
    )
    lease_time: Union[int, Unset] = Field(default=UNSET, required=False)
    subnet_id: Union[int, None, Unset] = Field(default=UNSET, required=False)
    temp_expires_on: Union[datetime, None, Unset] = Field(
        default=UNSET, required=False
    )
    updated: Union[datetime, Unset] = Field(default=UNSET, required=False)
    user_id: Union[int, None, Unset] = Field(default=UNSET, required=False)

    def must_trigger_workflow(self) -> bool:
        return (
            not isinstance(self.ip, Unset)
            or not isinstance(self.alloc_type, Unset)
            or not isinstance(self.subnet_id, Unset)
        )
