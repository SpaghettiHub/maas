log:
  stdout: true
  level: warn

persistence:
  defaultStore: default
  visibilityStore: visibility
  numHistoryShards: 4
  datastores:
    default:
      sql:
        user: "{{ user }}"
        password: "{{ password }}"
        pluginName: "postgres12"
        databaseName: "{{ database }}"
        connectAddr: "{{ address }}"
        connectProtocol: "tcp"
        connectAttributes:
          search_path: "temporal"
        {{for k, v in connect_attributes.items()}}
          {{ k }}: "{{ v }}"
        {{endfor}}
        maxConns: 5
        maxIdleConns: 5
        maxConnLifetime: "5m"

    visibility:
      sql:
        user: "{{ user }}"
        password: "{{ password }}"
        pluginName: "postgres12"
        databaseName: "{{ database }}"
        connectAddr: "{{ address }}"
        connectProtocol: "tcp"
        connectAttributes:
          search_path: "temporal_visibility"
        {{for k, v in connect_attributes.items()}}
          {{ k }}: "{{ v }}"
        {{endfor}}
        maxConns: 1
        maxIdleConns: 1
        maxConnLifetime: "5m"

global:
  membership:
    maxJoinDuration: 30s
    broadcastAddress: "{{ broadcast_address }}"
  pprof:
    # disable pprof
    port: 0
  tls:
    refreshInterval: 0s
    internode:
      # This server section configures the TLS certificate that internal temporal
      # cluster nodes (history, matching, and internal-frontend) present to other
      # clients within the Temporal Cluster.
      server:
        requireClientAuth: true
        certFile: {{ cert_file }}
        keyFile: {{ key_file }}
        clientCaFiles:
          - {{ cacert_file }}
      # This client section is used to configure the TLS clients within
      # the Temporal Cluster that connect to an Internode (history, matching, or
      # internal-frontend)
      client:
        serverName: maas
        disableHostVerification: false
        rootCaFiles:
          - {{ cacert_file }}
    frontend:
      # This server section configures the TLS certificate that the Frontend
      # server presents to external clients.
      server:
        requireClientAuth: true
        certFile: {{ cert_file }}
        keyFile: {{ key_file }}
        clientCaFiles:
          - {{ cacert_file }}
      client:
        serverName: maas
        disableHostVerification: false
        rootCaFiles:
          - {{ cacert_file }}
  metrics:
    prometheus:
      framework: "tally"
      timerType: "histogram"
      # metrics are exposed via load balancer
      listenAddress: "127.0.0.1:9000"

services:
  frontend:
    rpc:
      grpcPort: 5271
      membershipPort: 5281
      bindOnIP: "0.0.0.0"

  matching:
    rpc:
      grpcPort: 5272
      membershipPort: 5282
      bindOnIP: "0.0.0.0"

  history:
    rpc:
      grpcPort: 5273
      membershipPort: 5283
      bindOnIP: "0.0.0.0"

  worker:
    rpc:
      grpcPort: 5274
      membershipPort: 5284
      bindOnIP: "0.0.0.0"

clusterMetadata:
  enableGlobalNamespace: false
  failoverVersionIncrement: 10
  masterClusterName: "active"
  currentClusterName: "active"
  clusterInformation:
    active:
      enabled: true
      initialFailoverVersion: 1
      rpcName: "frontend"
      rpcAddress: "localhost:7233"

dynamicConfigClient:
  filepath: "{{ config_dir }}/production-dynamic.yaml"
  pollInterval: "60s"
