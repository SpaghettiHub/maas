# Generated by Django 2.2.12 on 2021-06-07 12:44

from django.db import migrations
from django.db.models import Count, F, IntegerField, OuterRef, Subquery
from django.utils import timezone


def add_missing_default_numanodes_controllers(apps, schema_editor):
    Node = apps.get_model("maasserver", "Node")
    NUMANode = apps.get_model("maasserver", "NUMANode")
    nodes = (
        Node.objects.exclude(node_type=1)
        .annotate(numanodes=Count("numanode"))
        .filter(numanodes=0)
        .values_list("id", "memory", "cpu_count")
    )
    now = timezone.now()
    NUMANode.objects.bulk_create(
        (
            NUMANode(
                index=0,
                node_id=node_id,
                memory=memory,
                cores=list(range(cpu_count)),
                created=now,
                updated=now,
            )
            for node_id, memory, cpu_count in nodes
        )
    )


def fix_empty_interface_numanode(apps, schema_editor):
    Interface = apps.get_model("maasserver", "Interface")
    NUMANode = apps.get_model("maasserver", "NUMANode")
    default_numanode_id = NUMANode.objects.filter(
        node=OuterRef("node"), index=0
    ).values("id")
    (
        Interface.objects.filter(type="physical", numa_node__isnull=True)
        .exclude(node__node_type=1)  # devices don't have NUMA nodes
        .annotate(
            default_numanode_id=Subquery(
                default_numanode_id, output_field=IntegerField()
            )
        )
        .update(numa_node_id=F("default_numanode_id"))
    )


class Migration(migrations.Migration):
    dependencies = [
        ("maasserver", "0240_ownerdata_key_fix"),
    ]

    operations = [
        migrations.RunPython(add_missing_default_numanodes_controllers),
        migrations.RunPython(fix_empty_interface_numanode),
    ]
