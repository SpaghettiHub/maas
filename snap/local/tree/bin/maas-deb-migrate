#!/bin/bash -e
#
# Copyright 2020 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).
#
#
# Perform migration from a deb setup to the snap.
#

SNAP_COMMON="/var/snap/maas/common"
SNAP_CURRENT="/var/snap/maas/current"
SNAP_MODE_FILE="$SNAP_COMMON/snap_mode"

is_installed() {
    dpkg-query -W -f'${Status}\n' "$1"  2>/dev/null | grep -q ^install
}

set_snap_mode() {
    local mode=""
    if is_installed maas-region-api; then
        mode="region"
    fi
    if is_installed maas-rack-controller; then
        [ -z "$mode" ] && mode="rack" || mode="region+rack"
    fi
    if  [ -n "$mode" ]; then
        echo "$mode" > "$SNAP_MODE_FILE"
    fi
}

get_snap_mode() {
    if [ -f "$SNAP_MODE_FILE" ]; then
        cat "$SNAP_MODE_FILE"
    fi
}

snap_run() {
    snap run --shell maas -c "$1"
}

clear_services() {
    local services="dhcpd dhcpd6 http proxy rackd regiond syslog"
    local service
    for service in $services; do
        service="maas-$service.service"
        deb-systemd-invoke stop "$service" || true
        deb-systemd-helper purge "$service" || true
        deb-systemd-helper unmask "$service" || true
    done
}

migrate_data() {
    if [ -d /etc/maas ]; then
        cp -a /etc/maas/* "$SNAP_CURRENT"
    fi

    mkdir -p "$SNAP_CURRENT/var/lib"
    if [ -d /var/lib/maas ]; then
        mv /var/lib/maas "$SNAP_CURRENT/var/lib"
        chown -R root:root "$SNAP_CURRENT/var/lib/maas"

        mkdir -p "$SNAP_CURRENT/root"
        if [ -d "$SNAP_CURRENT/var/lib/maas/.ssh" ]; then
           mv "$SNAP_CURRENT/var/lib/maas/.ssh" "$SNAP_CURRENT/root"
        fi
    fi
    if [ -d /var/spool/maas-proxy ]; then
        mv /var/spool/maas-proxy/* /var/snap/maas/common/proxy/spool/
        chown -R snap_daemon:snap_daemon /var/snap/maas/common/proxy/spool
    fi
}

migrate_db() {
    if get_snap_mode | grep -q "region"; then
        snap_run "maas-region migrate"
    fi

    # patch the value of the default cloud images keyring to point to the one
    # in the snap
    local keyring="/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg"
    cat <<EOF | sudo -iu postgres psql maasdb
UPDATE maasserver_bootsource
SET keyring_filename = '${MAAS_SNAP}${keyring}'
WHERE keyring_filename = '${keyring}'
EOF
}

cleanup_data() {
    rm -rf \
       /etc/bind/maas \
       /etc/maas \
       /etc/chrony/maas.conf \
       /run/lock/maas:* \
       /run/maas/ \
       /var/spool/maas-proxy
}

configure_supervisord() {
    cat <<EOF | snap_run "/usr/bin/env python3 -"
from maascli import snappy 
current_mode = snappy.get_current_mode()
snappy.render_supervisord(current_mode)
snappy.sighup_supervisord()
EOF
}

set_snap_mode
clear_services
migrate_data
cleanup_data
migrate_db
configure_supervisord
