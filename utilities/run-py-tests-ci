#!/bin/bash
#
# Helpers to run tests in CI.
#
# This runs both nose- and pytest-based tests, and fails if any of the
# processes fails. If PARENT is set and the git diff with the parent is
# only about docs changes, then we skip the tests.

set -o pipefail

RUN_TESTS=true

if [ -n "$PARENT" ]; then
    echo "Comparing changes against $PARENT..."
    CHANGES=$(git -c safe.directory="$PWD" diff --name-only "$PARENT" HEAD)

    RUN_TESTS=false
    for f in $CHANGES; do
        if [[ ! "$f" =~ ^docs/ ]]; then
            RUN_TESTS=true
            break
        fi
    done
fi

if [ "$RUN_TESTS" = true ]; then
    echo "Running tests..."

    MAX_PROCESSES=${MAAS_MAX_TEST_PROCESSES:-4}

    MAAS_RAND_SEED="$(od -vAn -N8 -tx8 < /dev/urandom | tr -d ' ')"
    PYTHONHASHSEED="$(shuf -i 0-4294967295 -n 1)"
    export MAAS_RAND_SEED PYTHONHASHSEED

    echo "MAAS_RAND_SEED=${MAAS_RAND_SEED}"
    echo "PYTHONHASHSEED=${PYTHONHASHSEED}"
    echo "MAX_PROCESSES=${MAX_PROCESSES}"

    bin/test.parallel --emit-subunit --subprocesses="${MAX_PROCESSES}" | \
        bin/subunit-1to2 | \
        bin/subunit2junitxml --no-passthrough -f -o junit.xml | \
        bin/subunit2pyunit --no-passthrough
    res1=$?
    bin/pytest -n auto --maxprocesses="${MAX_PROCESSES}" --dist=load --junit-xml=junit-pytest.xml
    res2=$?
    exit $((res1 + res2))
else
    echo "Skipping tests because only docs/ changed."
    exit 0
fi
